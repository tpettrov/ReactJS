{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/deep-equal/index.js","node_modules/deep-equal/lib/is_arguments.js","node_modules/deep-equal/lib/keys.js","node_modules/history/lib/Actions.js","node_modules/history/lib/AsyncUtils.js","node_modules/history/lib/DOMStateStorage.js","node_modules/history/lib/DOMUtils.js","node_modules/history/lib/ExecutionEnvironment.js","node_modules/history/lib/createBrowserHistory.js","node_modules/history/lib/createDOMHistory.js","node_modules/history/lib/createHistory.js","node_modules/history/lib/createLocation.js","node_modules/history/lib/deprecate.js","node_modules/history/lib/extractPath.js","node_modules/history/lib/parsePath.js","node_modules/history/lib/runTransitionHook.js","node_modules/invariant/browser.js","node_modules/process/browser.js","node_modules/warning/browser.js","source/client/components/App.js","source/client/components/Footer.js","source/client/components/Home.js","source/client/components/MovieAdd.js","source/client/components/Navbar.js","source/client/components/sub-components/MovieCard.js","source/client/components/sub-components/NavabrUserMenu.js","source/client/main.js","source/client/routes.js","source/client/utilities/Helpers.js"],"names":[],"mappingspBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5DA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqB,G;;;AAEjB,iBAAY,KAAZ,EAAkB;AAAA;;AAAA,8GACR,KADQ;;AAGd,cAAK,KAAL,GAAa;;AAET,4BAAgB;AAFP,SAAb;;AAKA,cAAK,kBAAL,GAA0B,M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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","/**\n * Indicates that navigation was caused by a call to history.push.\n */\n'use strict';\n\nexports.__esModule = true;\nvar PUSH = 'PUSH';\n\nexports.PUSH = PUSH;\n/**\n * Indicates that navigation was caused by a call to history.replace.\n */\nvar REPLACE = 'REPLACE';\n\nexports.REPLACE = REPLACE;\n/**\n * Indicates that navigation was caused by some other action such\n * as using a browser's back/forward buttons and/or manually manipulating\n * the URL in a browser's location bar. This is the default.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\n * for more information.\n */\nvar POP = 'POP';\n\nexports.POP = POP;\nexports['default'] = {\n  PUSH: PUSH,\n  REPLACE: REPLACE,\n  POP: POP\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0;\n  var isDone = false;\n\n  function done() {\n    isDone = true;\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) return;\n\n    if (currentTurn < turns) {\n      work.call(this, currentTurn++, next, done);\n    } else {\n      done.apply(this, arguments);\n    }\n  }\n\n  next();\n}","/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededError = 'QuotaExceededError';\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (error.name === QuotaExceededError && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.getHashPath = getHashPath;\nexports.replaceHashPath = replaceHashPath;\nexports.getWindowPath = getWindowPath;\nexports.go = go;\nexports.getUserConfirmation = getUserConfirmation;\nexports.supportsHistory = supportsHistory;\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\n\nfunction addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent('on' + event, listener);\n  }\n}\n\nfunction removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent('on' + event, listener);\n  }\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  return window.location.href.split('#')[1] || '';\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\n}\n\nfunction getWindowPath() {\n  return window.location.pathname + window.location.search + window.location.hash;\n}\n\nfunction go(n) {\n  if (n) window.history.go(n);\n}\n\nfunction getUserConfirmation(message, callback) {\n  callback(window.confirm(message));\n}\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  // FIXME: Work around our browser history not working correctly on Chrome\n  // iOS: https://github.com/rackt/react-router/issues/2565\n  if (ua.indexOf('CriOS') !== -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  var ua = navigator.userAgent;\n  return ua.indexOf('Firefox') === -1;\n}","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\n/**\n * Creates and returns a history object that uses HTML5's history API\n * (pushState, replaceState, and the popstate event) to manage history.\n * This is the recommended method of managing history in browsers because\n * it provides the cleanest URLs.\n *\n * Note: In browsers that do not support the HTML5 history API full\n * page reloads will be used to preserve URLs.\n */\nfunction createBrowserHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var forceRefresh = options.forceRefresh;\n\n  var isSupported = _DOMUtils.supportsHistory();\n  var useRefresh = !isSupported || forceRefresh;\n\n  function getCurrentLocation(historyState) {\n    historyState = historyState || window.history.state || {};\n\n    var path = _DOMUtils.getWindowPath();\n    var _historyState = historyState;\n    var key = _historyState.key;\n\n    var state = undefined;\n    if (key) {\n      state = _DOMStateStorage.readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\n    }\n\n    var location = _parsePath2['default'](path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startPopStateListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function popStateListener(event) {\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\n\n      transitionTo(getCurrentLocation(event.state));\n    }\n\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    _DOMStateStorage.saveState(key, state);\n\n    var path = (basename || '') + pathname + search + hash;\n    var historyState = {\n      key: key\n    };\n\n    if (action === _Actions.PUSH) {\n      if (useRefresh) {\n        window.location.href = path;\n        return false; // Prevent location update.\n      } else {\n          window.history.pushState(historyState, null, path);\n        }\n    } else {\n      // REPLACE\n      if (useRefresh) {\n        window.location.replace(path);\n        return false; // Prevent location update.\n      } else {\n          window.history.replaceState(historyState, null, path);\n        }\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopPopStateListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopPopStateListener();\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    registerTransitionHook: registerTransitionHook,\n    unregisterTransitionHook: unregisterTransitionHook\n  });\n}\n\nexports['default'] = createBrowserHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createDOMHistory(options) {\n  var history = _createHistory2['default'](_extends({\n    getUserConfirmation: _DOMUtils.getUserConfirmation\n  }, options, {\n    go: _DOMUtils.go\n  }));\n\n  function listen(listener) {\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n\n    return history.listen(listener);\n  }\n\n  return _extends({}, history, {\n    listen: listen\n  });\n}\n\nexports['default'] = createDOMHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction createRandomKey(length) {\n  return Math.random().toString(36).substr(2, length);\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search &&\n  //a.action === b.action && // Different action !== location change.\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\n}\n\nvar DefaultKeyLength = 6;\n\nfunction createHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var getCurrentLocation = options.getCurrentLocation;\n  var finishTransition = options.finishTransition;\n  var saveState = options.saveState;\n  var go = options.go;\n  var keyLength = options.keyLength;\n  var getUserConfirmation = options.getUserConfirmation;\n\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\n\n  var transitionHooks = [];\n\n  function listenBefore(hook) {\n    transitionHooks.push(hook);\n\n    return function () {\n      transitionHooks = transitionHooks.filter(function (item) {\n        return item !== hook;\n      });\n    };\n  }\n\n  var allKeys = [];\n  var changeListeners = [];\n  var location = undefined;\n\n  function getCurrent() {\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\n      return allKeys.indexOf(pendingLocation.key);\n    } else if (location) {\n      return allKeys.indexOf(location.key);\n    } else {\n      return -1;\n    }\n  }\n\n  function updateLocation(newLocation) {\n    var current = getCurrent();\n\n    location = newLocation;\n\n    if (location.action === _Actions.PUSH) {\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\n    } else if (location.action === _Actions.REPLACE) {\n      allKeys[current] = location.key;\n    }\n\n    changeListeners.forEach(function (listener) {\n      listener(location);\n    });\n  }\n\n  function listen(listener) {\n    changeListeners.push(listener);\n\n    if (location) {\n      listener(location);\n    } else {\n      var _location = getCurrentLocation();\n      allKeys = [_location.key];\n      updateLocation(_location);\n    }\n\n    return function () {\n      changeListeners = changeListeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function confirmTransitionTo(location, callback) {\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\n        if (result != null) {\n          done(result);\n        } else {\n          next();\n        }\n      });\n    }, function (message) {\n      if (getUserConfirmation && typeof message === 'string') {\n        getUserConfirmation(message, function (ok) {\n          callback(ok !== false);\n        });\n      } else {\n        callback(message !== false);\n      }\n    });\n  }\n\n  var pendingLocation = undefined;\n\n  function transitionTo(nextLocation) {\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\n\n    pendingLocation = nextLocation;\n\n    confirmTransitionTo(nextLocation, function (ok) {\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\n\n      if (ok) {\n        // treat PUSH to current path like REPLACE to be consistent with browsers\n        if (nextLocation.action === _Actions.PUSH) {\n          var prevPath = createPath(location);\n          var nextPath = createPath(nextLocation);\n\n          if (nextPath === prevPath) nextLocation.action = _Actions.REPLACE;\n        }\n\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\n      } else if (location && nextLocation.action === _Actions.POP) {\n        var prevIndex = allKeys.indexOf(location.key);\n        var nextIndex = allKeys.indexOf(nextLocation.key);\n\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\n      }\n    });\n  }\n\n  function push(location) {\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\n  }\n\n  function replace(location) {\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function createKey() {\n    return createRandomKey(keyLength);\n  }\n\n  function createPath(location) {\n    if (location == null || typeof location === 'string') return location;\n\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n\n    var result = pathname;\n\n    if (search) result += search;\n\n    if (hash) result += hash;\n\n    return result;\n  }\n\n  function createHref(location) {\n    return createPath(location);\n  }\n\n  function createLocation(location, action) {\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\n\n    if (typeof action === 'object') {\n      //warning(\n      //  false,\n      //  'The state (2nd) argument to history.createLocation is deprecated; use a ' +\n      //  'location descriptor instead'\n      //)\n\n      if (typeof location === 'string') location = _parsePath2['default'](location);\n\n      location = _extends({}, location, { state: action });\n\n      action = key;\n      key = arguments[3] || createKey();\n    }\n\n    return _createLocation3['default'](location, action, key);\n  }\n\n  // deprecated\n  function setState(state) {\n    if (location) {\n      updateLocationState(location, state);\n      updateLocation(location);\n    } else {\n      updateLocationState(getCurrentLocation(), state);\n    }\n  }\n\n  function updateLocationState(location, state) {\n    location.state = _extends({}, location.state, state);\n    saveState(location.key, location.state);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    transitionHooks = transitionHooks.filter(function (item) {\n      return item !== hook;\n    });\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    push(_extends({ state: state }, path));\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    if (typeof path === 'string') path = _parsePath2['default'](path);\n\n    replace(_extends({ state: state }, path));\n  }\n\n  return {\n    listenBefore: listenBefore,\n    listen: listen,\n    transitionTo: transitionTo,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    createKey: createKey,\n    createPath: createPath,\n    createHref: createHref,\n    createLocation: createLocation,\n\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n  };\n}\n\nexports['default'] = createHistory;\nmodule.exports = exports['default'];","//import warning from 'warning'\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _Actions = require('./Actions');\n\nvar _parsePath = require('./parsePath');\n\nvar _parsePath2 = _interopRequireDefault(_parsePath);\n\nfunction createLocation() {\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (typeof location === 'string') location = _parsePath2['default'](location);\n\n  if (typeof action === 'object') {\n    //warning(\n    //  false,\n    //  'The state (2nd) argument to createLocation is deprecated; use a ' +\n    //  'location descriptor instead'\n    //)\n\n    location = _extends({}, location, { state: action });\n\n    action = key || _Actions.POP;\n    key = _fourthArg;\n  }\n\n  var pathname = location.pathname || '/';\n  var search = location.search || '';\n  var hash = location.hash || '';\n  var state = location.state || null;\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash,\n    state: state,\n    action: action,\n    key: key\n  };\n}\n\nexports['default'] = createLocation;\nmodule.exports = exports['default'];","//import warning from 'warning'\n\n\"use strict\";\n\nexports.__esModule = true;\nfunction deprecate(fn) {\n  return fn;\n  //return function () {\n  //  warning(false, '[history] ' + message)\n  //  return fn.apply(this, arguments)\n  //}\n}\n\nexports[\"default\"] = deprecate;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nfunction extractPath(string) {\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\n\n  if (match == null) return string;\n\n  return string.substring(match[0].length);\n}\n\nexports[\"default\"] = extractPath;\nmodule.exports = exports[\"default\"];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _extractPath = require('./extractPath');\n\nvar _extractPath2 = _interopRequireDefault(_extractPath);\n\nfunction parsePath(path) {\n  var pathname = _extractPath2['default'](path);\n  var search = '';\n  var hash = '';\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substring(hashIndex);\n    pathname = pathname.substring(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substring(searchIndex);\n    pathname = pathname.substring(0, searchIndex);\n  }\n\n  if (pathname === '') pathname = '/';\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash\n  };\n}\n\nexports['default'] = parsePath;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction runTransitionHook(hook, location, callback) {\n  var result = hook(location, callback);\n\n  if (hook.length < 2) {\n    // Assume the hook runs synchronously and automatically\n    // call the callback with the return value.\n    callback(result);\n  } else {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }\n}\n\nexports['default'] = runTransitionHook;\nmodule.exports = exports['default'];","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","import React from 'react';\r\nimport Navbar from './Navbar'\r\nimport Footer from './Footer'\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n            loggedInUserId: ''\r\n        }\r\n\r\n        this.LOGIN_DEFAULT_USER = this.LOGIN_DEFAULT_USER.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.LOGIN_DEFAULT_USER()\r\n    }\r\n\r\n    LOGIN_DEFAULT_USER(){\r\n\r\n        let request = {\r\n\r\n            url: '/user/login',\r\n            method: 'post',\r\n            data: JSON.stringify({username: 'admin', password: 'admin'}),\r\n            contentType: 'application/json'\r\n        }\r\n\r\n        $.ajax(request)\r\n            .done(userId => {\r\n\r\n                this.setState({\r\n                    loggedInUserId: userId,\r\n                })\r\n\r\n            })\r\n            .fail(err => {\r\n                console.log('UserMenu: err', err)\r\n                this.setState({\r\n                    loggedInUserId: '',\r\n                    message: err.responseJSON.message\r\n                })\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n    logoutUser(){\r\n\r\n        let request = {\r\n            url:'/user/logout',\r\n            method: 'post'\r\n        }\r\n\r\n        $.ajax(request)\r\n            .done(()=>{\r\n            this.setState({\r\n\r\n                loggedInUserId: ''\r\n            })\r\n            }).fail(err => {\r\n                this.setState({\r\n                    error: err.responseJSON.message\r\n                })\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let userData = {\r\n            loggedInUserId: this.state.loggedInUserId,\r\n            loginUser: this.LOGIN_DEFAULT_USER,\r\n            logoutUser: this.logoutUser.bind(this)\r\n        }\r\n        return (\r\n            <div>\r\n                <Navbar history={this.props.history} userData = {userData} />\r\n                {this.props.children}\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}","/**\r\n * Created by apetrov on 6/23/2017.\r\n */\r\nimport React from 'react'\r\nimport { Link } from 'react-router'\r\n\r\nexport default class Footer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            mostRecentMovies: []\r\n\r\n        }\r\n\r\n        this.getFiveRecentMovies = this.getFiveRecentMovies.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.getFiveRecentMovies();\r\n        this.interval = setInterval(() => this.getFiveRecentMovies(), 3000)\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval)\r\n\r\n    }\r\n\r\n    getFiveRecentMovies(){\r\n\r\n        let request = {\r\n            method: 'get',\r\n            url: '/api/movies/five-recent'\r\n        }\r\n        $.ajax(request)\r\n            .done(data => {\r\n\r\n                this.setState({\r\n                    mostRecentMovies: data\r\n                })\r\n            })\r\n            .fail(err => toastr.error(err.responseJSON.message))\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let mosRecentMovies = this.state.mostRecentMovies.map(movie => {\r\n\r\n            return (\r\n                <li key=\"{movie.id}\">\r\n                    <Link to={\"/...\"}>{movie.name}</Link>\r\n                </li>\r\n            )\r\n\r\n\r\n        })\r\n\r\n        return (\r\n            <footer>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-5\">\r\n                            <h3 className=\"lead\">\r\n                                <strong>Information</strong> and\r\n                                <strong>Copyright</strong>\r\n                            </h3>\r\n                            <p>\r\n                                Powered by\r\n                                <strong>Express</strong>,\r\n                                <strong>MongoDb</strong>and\r\n                                <strong>React</strong>\r\n                            </p>\r\n                            <p>2017 SoftUni.</p>\r\n                        </div>\r\n                        <div className=\"col-sm-4 hidden-xs\">\r\n                            <h3 className=\"lead\">\r\n                                <strong>Newest</strong> 5 Movies\r\n                            </h3>\r\n                            <ul className=\"list-inline\">\r\n                                {mosRecentMovies}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-sm-3\">\r\n                            <h3 className=\"lead\">Auhtor</h3>\r\n                            <a href=\"https://github.com/tpettrov\">\r\n                                <strong>Anton Petrov</strong>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n\r\n\r\n        )\r\n\r\n\r\n    }\r\n}","/**\r\n * Created by Toni on 6/22/2017.\r\n */\r\nimport React from 'react';\r\nimport MovieCard from './sub-components/MovieCard'\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n            topTenMovies: [],\r\n            error: ''\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let request = {\r\n\r\n            url: '/api/movies/top-ten',\r\n            method: 'get'\r\n        }\r\n        $.ajax(request)\r\n            .done(data => this.setState({topTenMovies: data}))\r\n            .fail(error => this.setState({error: error.responseJSON.message}))\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let movies = this.state.topTenMovies.map((movie, index) => {\r\n\r\n\r\n            return (\r\n\r\n                <MovieCard key= {movie._id}\r\n                           movie = {movie}\r\n                           index = { index} />\r\n            )\r\n\r\n        })\r\n\r\n\r\n        return (\r\n         <div className=\"container\">\r\n             <h3 className=\"text-center\">Welcome to\r\n                 <strong> Movie database</strong>\r\n             </h3>\r\n             <div className=\"list-group\">\r\n                 {movies}\r\n             </div>\r\n         </div>\r\n        )\r\n    }\r\n}","/**\r\n * Created by apetrov on 6/23/2017.\r\n */\r\nimport React from 'react';\r\n\r\nimport Helpers from '../utilities/Helpers';\r\n\r\nexport default class AddMovie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            description: '',\r\n            genres: [],\r\n            genresValidationState: '',\r\n            nameValidationState: '',\r\n            posterValidationState: '',\r\n            helpBlock: ''\r\n        };\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let name = this.state.name.trim();\r\n        let genres = this.state.genres;\r\n        if (!name) {\r\n            this.setState({\r\n                nameValidationState: 'has-error',\r\n                helpBlock: 'Please enter Movie name!'\r\n            });\r\n        }\r\n        if (genres.length === 0) {\r\n            this.setState({\r\n                genresValidationState: 'has-error',\r\n                helpBlock: 'Please enter Movie name!'\r\n            });\r\n        }\r\n\r\n        if (name) {\r\n            let data = {\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                genres: this.state.genres\r\n            };\r\n\r\n            let request = {\r\n                url: '/api/movies/add',\r\n                method: 'POST',\r\n                data: JSON.stringify(data),\r\n                contentType : 'application/json'\r\n            };\r\n            $.ajax(request)\r\n                .done(() => {\r\n                    this.props.history.pushState(null, '/');\r\n\r\n                })\r\n                .fail(() => console.log('movie post fail.'));\r\n        }\r\n    }\r\n\r\n    handleNameChange(e) {\r\n        let name = e.target.value;\r\n        this.setState({\r\n            name: name\r\n        });\r\n    }\r\n\r\n    handleDescriptionChange(e) {\r\n        let description = e.target.value;\r\n        this.setState({\r\n            description: description\r\n        });\r\n    }\r\n\r\n    handleGenresChange(e) {\r\n        let genreValue = e.target.value;\r\n        console.log('MovieAdd state', this.state);\r\n        if (this.state.genres.indexOf(genreValue) === -1) {\r\n            this.setState(prevState => ({\r\n                genres: Helpers.appendToArray(genreValue, prevState.genres)\r\n            }));\r\n        } else {\r\n            this.setState(prevState => ({\r\n                genres: Helpers.removeFromArray(genreValue, prevState.genres)\r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row flipInX animated'>\r\n                    <div className='col-sm-8'>\r\n                        <div className='panel panel-default'>\r\n                            <div className='panel-heading'>Add Movie</div>\r\n                            <div className='panel-body'>\r\n                                <form onSubmit={  this.handleSubmit.bind(this)  }>\r\n                                    <div className={ 'form-group ' + this.state.nameValidationState }>\r\n                                        <label className='control-label'>Name</label>\r\n                                        <input type='text' className='form-control' ref='nameTextField'\r\n                                               value={ this.state.name }\r\n                                               onChange={ this.handleNameChange.bind(this) } autoFocus/>\r\n                                        <span className='help-block'>{ this.state.helpBlock }</span>\r\n                                    </div>\r\n                                    <div className='form-group'>\r\n                                        <label className='control-label'>Description</label>\r\n                                        <textarea className='form-control'\r\n                                                  rows=\"5\"\r\n                                                  value={ this.state.description }\r\n                                                  onChange={ this.handleDescriptionChange.bind(this) } />\r\n                                    </div>\r\n                                    <div className={ 'form-group ' + this.state.genresValidationState }>\r\n                                        <div className='checkbox checkbox-inline'>\r\n                                            <input type='checkbox' name='genres' id='action' value='Action'\r\n                                                   checked={ this.state.genres.indexOf('Action') !== -1 }\r\n                                                   onClick={ this.handleGenresChange.bind(this) }/>\r\n                                            <label htmlFor='action'>Action</label>\r\n                                        </div>\r\n                                        <div className='checkbox checkbox-inline'>\r\n                                            <input type='checkbox' name='genres' id='horror' value='Horror'\r\n                                                   checked={ this.state.genres.indexOf('Horror') !== -1 }\r\n                                                   onChange={ this.handleGenresChange.bind(this) }/>\r\n                                            <label htmlFor='horror'>Horror</label>\r\n                                        </div>\r\n                                        <div className='checkbox checkbox-inline'>\r\n                                            <input type='checkbox' name='genres' id='sci-fi' value='Sci-fi'\r\n                                                   checked={ this.state.genres.indexOf('Sci-fi') !== -1 }\r\n                                                   onChange={ this.handleGenresChange.bind(this) }/>\r\n                                            <label htmlFor='sci-fi'>Sci-fi</label>\r\n                                        </div>\r\n                                        <div className='checkbox checkbox-inline'>\r\n                                            <input type='checkbox' name='genres' id='fantasy' value='Fantasy'\r\n                                                   checked={ this.state.genres.indexOf('Fantasy') !== -1 }\r\n                                                   onChange={ this.handleGenresChange.bind(this) }/>\r\n                                            <label htmlFor='fantasy'>Fantasy</label>\r\n                                        </div>\r\n                                        <div className='checkbox checkbox-inline'>\r\n                                            <input type='checkbox' name='genres' id='romance' value='Romance'\r\n                                                   checked={ this.state.genres.indexOf('Romance') !== -1 }\r\n                                                   onChange={ this.handleGenresChange.bind(this) }/>\r\n                                            <label htmlFor='romance'>Romance</label>\r\n                                        </div>\r\n                                        <div className='checkbox checkbox-inline'>\r\n                                            <input type='checkbox' name='genres' id='thriller' value='Thriller'\r\n                                                   checked={ this.state.genres.indexOf('Thriller') !== -1 }\r\n                                                   onChange={ this.handleGenresChange.bind(this) }/>\r\n                                            <label htmlFor='thriller'>Thriller</label>\r\n                                        </div>\r\n                                        <div className='checkbox checkbox-inline'>\r\n                                            <input type='checkbox' name='genres' id='adventure' value='Adventure'\r\n                                                   checked={ this.state.genres.indexOf('Adventure') !== -1 }\r\n                                                   onChange={ this.handleGenresChange.bind(this) }/>\r\n                                            <label htmlFor='adventure'>Adventure</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button type='submit' className='btn btn-primary'>Submit</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * Created by apetrov on 6/23/2017.\r\n */\r\nimport React from 'react'\r\nimport { Link } from 'react-router'\r\nimport NavbarUserMenu from './sub-components/NavabrUserMenu'\r\n\r\nexport default class Navbar extends  React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n            ajaxAnimationClass: ''\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n\r\n        $(document).ajaxStart(() => {\r\n\r\n            this.setState({\r\n                ajaxAnimationClass: 'fadeIn'\r\n            })\r\n        })\r\n\r\n        $(document).ajaxComplete(()=>{\r\n\r\n            this.setState({\r\n                ajaxAnimationClass: 'fadeOut'\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        let navbarUserMenu = <NavbarUserMenu userData={this.props.userData}/>\r\n\r\n        return (\r\n\r\n            <nav className = 'navbar navbar-default navbar-static-top'>\r\n                <div className=\"navbar-header\">\r\n                    <button type=\"button\"\r\n                            className=\"navbar-toggle collapsed\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#navbar\">\r\n                        <span className=\"sr-only\">Toggle navigation </span>\r\n                        <span className=\"icon-bar\"/>\r\n                        <span className=\"icon-bar\"/>\r\n                        <span className=\"icon-bar\"/>\r\n                    </button>\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        <span\r\n                            ref='triangles'\r\n                            className={'triangles animated ' + this.state.ajaxAnimationClass}>\r\n                            <div className=\"tri invert\" />\r\n                            <div className=\"tri invert\" />\r\n                            <div className=\"tri\" />\r\n                            <div className=\"tri invert\" />\r\n                            <div className=\"tri invert\" />\r\n                            <div className=\"tri\" />\r\n                            <div className=\"tri invert\" />\r\n                            <div className=\"tri \" />\r\n                            <div className=\"tri invert\" />\r\n                        </span>\r\n                        MDB\r\n                    </Link>\r\n                    </div>\r\n                <div id=\"navbar\" className=\"navbar-collapse collapse\">\r\n                    <ul className=\"nav navbar-nav\">\r\n                        <li>\r\n                            <Link to=\"/\"> Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/movie/add\"> Add Movie</Link>\r\n                        </li>\r\n                    </ul>\r\n                    {navbarUserMenu}\r\n                </div>\r\n            </nav>\r\n\r\n\r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}","/**\r\n * Created by apetrov on 6/23/2017.\r\n */\r\n\r\nimport React from 'react'\r\nimport { Link } from 'react-router'\r\n\r\nexport default class MovieCard extends  React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n            movieScore: this.props.movie.score,\r\n            movieVotes: this.props.movie.votes,\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"animated fadeIn\">\r\n                <div className=\"media movie\">\r\n                    <span className=\"position pull-left\">{this.props.index + 1}</span>\r\n                    <div className=\"media-body\">\r\n                        <h4 className=\"media-heading\">\r\n                            <Link to={`/movie/${this.props.movie._id}/${this.props.movie.name}`}>\r\n                                {this.props.movie.name}\r\n                            </Link>\r\n                        </h4>\r\n                        <small>Genres: {this.props.movie.genres}</small>\r\n                        <br />\r\n                        <p> {this.props.movie.description}\r\n                        </p>\r\n                        <span className=\"votes\">Votes:\r\n                            {/*<strong> {this. state.movieVotes}</strong>*/}\r\n                        </span>\r\n                        {/*{nodes.rating}*/}\r\n                    </div>\r\n                    {/*{nodes.panelToggles} */}\r\n                </div>\r\n                {/*{nodes.votePanel}*/}\r\n                {/*{nodes.commentsPanel}*/}\r\n                <div id=\"clear\" />\r\n            </div>\r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n}","/**\r\n * Created by apetrov on 6/23/2017.\r\n */\r\nimport React from 'react'\r\nimport { Link } from 'react-router'\r\n\r\n\r\nexport default class NavabrUserMenu extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n            loggedInUserId: this.props.userData.loggedInUserId\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        this.setState({\r\n            loggedInUserId: nextProps.userData.loggedInUserId\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let userData = this.props.userData\r\n        let userMenu\r\n\r\n        if(!this.state.loggedInUserId) {\r\n\r\n\r\n            userMenu = (\r\n\r\n                <ul className=\"nav navbar-nav pull-right\">\r\n                    <li>\r\n                        <a href=\"#\" onClick={userData.loginUser}>Login</a>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/user/register\">Register</Link>\r\n                    </li>\r\n                </ul>\r\n            )\r\n        } else {\r\n\r\n                            userMenu = (\r\n\r\n                                <ul className=\"nav navbar-nav pull-right\">\r\n                                    <li>\r\n                                        <Link to={`/user/profile/${this.state.loggedInUserId}`}>Profile</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick={userData.logoutUser}>Logout</a>\r\n                                    </li>\r\n                                </ul>\r\n\r\n\r\n                            )\r\n\r\n                }\r\n\r\n                return (\r\n                    <div>\r\n                        {userMenu}\r\n                    </div>\r\n                )\r\n\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport Router from 'react-router';\r\nimport ReactDOM from 'react-dom';\r\nimport createBrowserHistory from 'history/lib/createBrowserHistory';\r\n\r\nimport routes from './routes';\r\n\r\nlet history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n    <Router history={history}>{ routes }</Router>,\r\n    document.getElementById('app')\r\n);","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport MovieAdd from './components/MovieAdd'\r\n\r\nimport App from './components/App';\r\nimport Home from './components/Home'\r\n\r\nexport default (\r\n    <Route component={ App } >\r\n        <Route path='/' component={Home} />\r\n            <Route path='/movie/Add' component={MovieAdd} />\r\n        </Route>\r\n);","/**\r\n * Created by apetrov on 6/23/2017.\r\n */\r\nexport default class Helpers {\r\n\r\n static appendToArray (value, array) {\r\n\r\n     array.push(value)\r\n\r\n     return array\r\n\r\n }\r\n\r\n static prependToArray(value, array) {\r\n\r\n     array.unshift(value)\r\n\r\n }\r\n\r\n static removeFromArray(value, array) {\r\n\r\n     let index = array.indexOf(value);\r\n\r\n     if (index !== -1) {\r\n\r\n         array.splice(index, 1)\r\n\r\n     }\r\n\r\n     return array\r\n\r\n }\r\n\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}